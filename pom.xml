<?xml version="1.0" encoding="UTF-8"?>
<!-- Maven 프로젝트 정의 문서의 루트 요소 -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <!-- POM 모델 버전 - Maven 3에서는 항상 4.0.0 사용 -->
    <modelVersion>4.0.0</modelVersion>

    <!-- 프로젝트의 기본 좌표 정보 -->
    <!-- 그룹 ID: 조직이나 프로젝트 그룹을 식별하는 도메인 이름의 역순 -->
    <groupId>org.example</groupId>
    <!-- 아티팩트 ID: 프로젝트의 고유 이름 -->
    <artifactId>search-bookmark</artifactId>
    <!-- 버전: 현재 개발 중임을 나타내는 SNAPSHOT 표시 -->
    <version>1.0-SNAPSHOT</version>
    <!-- 프로젝트 이름: 사람이 읽기 쉬운 형태의 이름 -->
    <name>search-bookmark</name>
    <!-- 패키징 유형: WAR(Web Application Archive)로 웹 애플리케이션임을 나타냄 -->
    <packaging>war</packaging>


    <!-- 프로젝트 속성: 빌드 설정 및 환경 변수 정의 -->
    <properties>
        <!-- 소스 코드의 인코딩 설정 -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- Java 17을 컴파일 타겟으로 설정 -->
        <maven.compiler.target>17</maven.compiler.target>
        <!-- Java 17을 소스 코드 버전으로 설정 -->
        <maven.compiler.source>17</maven.compiler.source>
    </properties>

    <!-- Maven 중앙 저장소: https://mvnrepository.com/ -->
    <!-- 프로젝트 의존성 목록 -->
    <dependencies>
        <!-- Jakarta Servlet API: 서블릿 기반 웹 애플리케이션 개발에 필요 -->
        <!-- provided 범위: 컴파일 시에만 필요하고 런타임에는 컨테이너가 제공 -->
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>6.1.0</version>
            <scope>provided</scope>
        </dependency>

        <!-- Jackson Databind: JSON 직렬화/역직렬화 라이브러리 -->
        <!-- REST API 개발 시 JSON 데이터 처리에 사용 -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.18.3</version>
        </dependency>

        <!-- Dotenv Java: 환경 변수 관리 라이브러리 -->
        <!-- .env 파일에서 환경 설정을 로드하는 데 사용 -->
        <dependency>
            <groupId>io.github.cdimascio</groupId>
            <artifactId>dotenv-java</artifactId>
            <version>3.2.0</version>
        </dependency>

        <!-- Spring WebMVC: 스프링 MVC 웹 프레임워크 -->
        <!-- 웹 애플리케이션의 MVC 아키텍처 구현에 사용 -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>6.2.5</version>
        </dependency>

        <!-- MySQL Connector/J: MySQL 데이터베이스 드라이버 -->
        <!-- MySQL 데이터베이스 연결에 사용 -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <version>9.2.0</version>
        </dependency>

        <!-- PostgreSQL JDBC Driver: PostgreSQL 데이터베이스 드라이버 -->
        <!-- PostgreSQL 데이터베이스 연결에 사용 -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.7.5</version>
        </dependency>

        <!-- MyBatis: SQL 매핑 프레임워크 -->
        <!-- 객체와 SQL 문 사이의 매핑을 처리하는 ORM 도구 -->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>3.5.19</version>
        </dependency>
    </dependencies>

    <!-- 빌드 설정 -->
    <build>
        <!-- 플러그인 설정 -->
        <plugins>
            <!-- Maven WAR 플러그인: WAR 파일 생성을 위한 플러그인 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.4.0</version>
            </plugin>
        </plugins>

        <!-- 리소스 설정: 빌드 시 포함할 리소스 파일 지정 -->
        <resources>
            <resource>
                <!-- 리소스 디렉토리 위치 -->
                <directory>src/main/resources</directory>
                <!-- 포함할 파일 패턴 -->
                <includes>
                    <!-- .env 파일: 환경 변수 설정 파일 -->
                    <include>.env</include>
                    <!-- XML 파일: 설정 파일(예: MyBatis 매핑 파일) -->
                    <include>**/*.xml</include>
                </includes>
            </resource>
        </resources>
    </build>
</project>